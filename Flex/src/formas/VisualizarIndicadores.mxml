<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009"
		   xmlns:s="library://ns.adobe.com/flex/spark"
		   xmlns:mx="library://ns.adobe.com/flex/mx"
		   width="808" height="1071" label="{nombreCatalogo}" creationComplete="cargaDatos()">
	
	<fx:Metadata>
		[Event(name="visCreated", type="VisualizarIndEvent")]
		[Event(name="visUpdated", type="VisualizarIndEvent")]
		[Event(name="visDeleted", type="VisualizarIndEvent")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			//import flexunit.utils.ArrayList;
			
			import mx.charts.Legend;
			import mx.charts.PieChart;
			import mx.charts.chartClasses.Series;
			import mx.charts.series.PieSeries;
			import mx.collections.ArrayCollection;
			import mx.collections.XMLListCollection;
			import mx.containers.ControlBar;
			import mx.containers.Panel;
			import mx.containers.TileDirection;
			import mx.controls.Alert;
			import mx.controls.Text;
			//import mx.controls.Label;
			import mx.controls.TextInput;
			
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.data.ChangeObject;
			import mx.data.ChangedItems;
			import mx.events.CloseEvent;
			import mx.events.CollectionEvent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.events.ListEvent;
			import mx.events.ValidationResultEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ObjectUtil;
			import mx.utils.StringUtil;			
			import objetosJava.*;			
			//import org.hamcrest.mxml.collection.Array;
			//import org.hamcrest.mxml.collection.InArray;			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			
			[Bindable] public var chanel:String;
			[Bindable] public var usuariologeado:Usuario;
			[Bindable] public var endpoint:String;
			[Bindable] public var message:String;
			[Bindable] public var nombreCatalogo:String;
			[Bindable] private var legend:Legend;
			[Bindable] private var panel:Panel;
			//[Bindable] private var pieChart:PieChart;
			//[Bindable] private var pieSeries:PieSeries;
			[Bindable] private var imagenGrafica:PieChart;
			//[Bindable] private var seriesGrafica:PieSeries;
			[Bindable] private var leyenda:Legend;
			[Bindable] private var datosTodosAgentes:ArrayCollection;
			[Bindable] private var datosAgentesConectados:ArrayCollection;
			[Bindable] private var datosPausaAgentes:ArrayCollection;
			[Bindable] private var datosLlamadasAtendidas:ArrayCollection;
			[Bindable] private var dp:XMLListCollection;
			[Bindable] private var localConectados:ArrayCollection;
			[Bindable] private var valx:int=1;
			[Bindable] private var valy:int=5;
			[Bindable] private var valnum:int=1;
			[Bindable] private var llam_Abandonadas:int=0;
			[Bindable] private var llamAtendidas:int;
			[Bindable] private var LlamadasFila:int;
			[Bindable] private var msjfila:int;
			[Bindable] private var agtmaxtiempo:int;
			[Bindable] private var llamaxtiempo:int;
			
			
			
			private function cargaDatos():void{
				
				//Inicializando objetos
				
				chkTodosED.selected = true;				 
				chkTodosID.selected = true;
				chkNumAST.selected = false;
				chkNumLST.selected = false;
				chkNumLAB.selected = false;
				chkNumLAT.selected = true;
				chkNumLF.selected = true;
				chkNumMF.selected = false;
				//chkTiempoPausa.selected = true;
				//chkAgenteLAT.selected = true;
				
				
				
				//Ocultando las gráficas
				pcConectados.visible = false;
				//pcTodosAgentes.visible = false;
				pcPausaAgente.visible = false;
				pcLlamadasAgente.visible = false;
				
				//Ocultando las etiquetas de las gráficas
				plLlamadasAgente.visible = false;
				plPausaAgente.visible = false;
				plTodosAgentes.visible = false;
				plAgentesConectados.visible = false;
				
				//Ocultando series
				seriesAgentesConectados.visible = false;
				seriesTodosAgentes.visible = false;
				seriesPausaAgente.visible = false;
				seriesLlamAtendidas.visible = false;
				
				//Ocultando leyendas
				leyConectados.visible = false;
				leyTodosAgentes.visible = false;
				
				//Inicializando las variables
				datosTodosAgentes= new ArrayCollection();
				imagenGrafica = new PieChart();
				
				chkTodosED_changeHandler();
				chkTodosID_changeHandler();				
				 
				chkTiempoPausa_changeHandler();
				chkAgenteLAT_changeHandler();
				 
				pinta_indicadores();
				
				
			}
			

			
			private function pinta_indicadores():void{
				var  arr_indicadores:ArrayCollection;
				var condicion:String;
				arr_indicadores=new ArrayCollection();
				arr_indicadores.removeAll();
				contenedor.removeAllElements();
				valy=5;
				valnum=1;
				chkNumMF.selected = true;
				chkNumLAB.selected = true;	
				chkNumLF.selected = true;
				chkNumLAT.selected = true;
				if ( chkNumLAT.selected == true){					
					condicion = "1"
						
					roIndicadorLlamAtendidas.buscaIndicador(condicion);
					//Alert.show("llamAtendidas: "+String(llamAtendidas));
					arr_indicadores.addItem({etiqueta:"Número de llamadas atendidas.",valor:llamAtendidas});
				}
				
				if ( chkNumLF.selected == true){
					 
					condicion = "2"
					roIndicadorLlamEnFila.buscaIndicador(condicion);
					arr_indicadores.addItem({etiqueta:"Número de llamadas en fila.",valor:LlamadasFila});
				}
				if (chkNumLAB.selected == true){					 
					condicion = "15"
					roIndicadorLlamAbandonadas.buscaIndicador(condicion);
					arr_indicadores.addItem({etiqueta:"Número de llamadas abandonadas.",valor:llam_Abandonadas});
					
				}
				if ( chkNumMF.selected == true){					 			 
					condicion = "16";
					roIndicadorMensajeEnFila.buscaIndicador(condicion);					
				    arr_indicadores.addItem({etiqueta:"Número de mensajes en fila.",valor:msjfila});
				}
				if (chkNumAST.selected == true){
					roIndicadorAgentesMaxTiempo.buscaNumeroAgentesMaxTiempo();
					arr_indicadores.addItem({etiqueta:"Número de agentes que sobrepasan el \n tiempo máximo en la llamada. ",valor:agtmaxtiempo});
				} 
				if (chkNumLST.selected == true){
					roIndicadorLlamadasMaxTiempo.buscaNumeroLlamadasMaxTiempo();
					arr_indicadores.addItem({etiqueta:"Número de llamadas en fila que sobrepasan \n el tiempo máximo de espera.",valor:llamaxtiempo});
					
				} 
				//inicia for				
				for (var inicio:int=0;inicio<arr_indicadores.length;inicio++)
				{
					
				var valetiqueta:String=arr_indicadores.getItemAt(inicio).etiqueta;
				//Alert.show(	valetiqueta);
				var  etiqueta:Label= new Label();
				 etiqueta.text= valetiqueta;
				 etiqueta.x=valx;
				 etiqueta.y=valy;
				// etiqueta.id=String(valnum);
				 contenedor.addElement(etiqueta);
				 //valx= valx+5;				
				 var cajatxt:TextInput= new TextInput();
				 cajatxt.text=String(arr_indicadores.getItemAt(inicio).valor);
				 cajatxt.width=51; 
				 cajatxt.height=18;
				 		 
				 cajatxt.y=valy ;
				 cajatxt.x=valx+255;
				 
				 contenedor.addElement(cajatxt);
				 
				 valy= valy+30;
				 valnum=valnum+1;
				}
				
			}
			
		 
			
			private function Regresa_HoraActual(fecha:Date):String{
				var horaActual:String;
				var horas:int;
				var minutos:int;
				var segundos:int;
				
				horaActual = "";
				horas = int(fecha.hours);
				if (horas < 10){
					horaActual = horaActual + "0"+horas;
				}else{
					horaActual = horaActual +horas;
				}
				horaActual = horaActual +":";
				minutos = int(fecha.minutes);
				if (minutos < 10){
					horaActual = horaActual + "0"+minutos;
				}else{
					horaActual = horaActual +minutos;
				}
				horaActual = horaActual +":";
				segundos = int(fecha.seconds);
				if (segundos < 10){
					horaActual = horaActual + "0"+segundos;
				}else{
					horaActual = horaActual +segundos;
				}
				
				return horaActual;
			}
			
			//Botón SALIR
			private function finPopUp():void {
				//Cierra la ventana
				parent.removeChild(this)
			}
			
			//
			private function seriesGrafica_porcentaje(item:Object, field:String, index:Number, percentValue:Number):String {
				return StringUtil.substitute("{0}%",
					percentValue.toFixed(1));
			}
			
			//
			private function seriesGrafica_etiquetaCantidad(item:Object, field:String, index:Number, percentValue:Number):String {
				return StringUtil.substitute("{0},{1}",
					item.nombre,
					item.cantidad);
			}
			
			private function chkTodosED_changeHandler():void{
				// TODO Auto-generated method stub
				var condicion:String;
				
				//Busca todos los estatus
				//en la tabla "conexion_agente", especialmente para 
				//el campo "estado_conexion"
				// 1 - Conectado
				condicion = "1"
				chkTodosED.selected = true;
				if (chkTodosED.selected == true){
					
					//lblAgentesConectados.visible = true;
					plAgentesConectados.visible = true;
					pcConectados.visible = true;
					seriesAgentesConectados.visible = true;
					
					//Crear la gráfica "Estatus de los Agentes Conectados"
					roIndicadorAgentesConectados.buscaEstatusAgentes(condicion);
				}/*else{
					
					//Inicializar las variables que permiten crear 
					//la gráfica de  "Estatus de los Agentes Conectados"
					//lblAgentesConectados.visible = false;
					datosAgentesConectados = new ArrayCollection();
					plAgentesConectados.visible = false;
					pcConectados.visible = false;
					seriesAgentesConectados.visible = false;
				}*/
			}
			
			 
			
			private function result_llamadasAbandonadas(event:ResultEvent):void{
				 
				if (event.result != null){					 
					llam_Abandonadas = int( event.result);
				}else{
					Alert.show("No fue posible obtener el número de llamadas abandonadas","Atención");
				}
			}
			
			
			
			private function result_llamadasAtendidas(event:ResultEvent):void{
				 
				if (event.result !=null){					
					llamAtendidas = int(event.result);
					 
				}else{
					Alert.show("No fue posible obtener el número de llamadas atendidas","Atención");
				}
			}

			
			
			private function result_llamadasEnFila(event:ResultEvent):void{
				if (event.result !=null){
					 
					LlamadasFila = int(event.result);
				}else{
					Alert.show("No fue posible obtener el número de llamadas en fila","Atención");
				}
			}
			
		 
			
			private function result_mensajesEnFila(event:ResultEvent):void{
				if (event.result !=null){					 
                    msjfila = int(event.result);
				}else{
					Alert.show("No fue posible obtener el número de mensajes en fila","Atención");
				}
			}

			private function result_graficaTodosAgentes(event:ResultEvent):void{
				if (event.result != null){
					
					datosTodosAgentes = new ArrayCollection();
					
					//Crear la gráfica "Estatus de todos los agentes"					
					datosTodosAgentes = ArrayCollection(event.result);
					
					//lblTodosAgentes.visible = true;
					plTodosAgentes.visible = true;
					pcTodosAgentes.visible = true;
					pcTodosAgentes.dataProvider = datosTodosAgentes;
					seriesTodosAgentes.visible = true;
					leyTodosAgentes.visible = true;

					if (datosTodosAgentes.length != 0){
						//Alert.show(String(datosTodosAgentes.length),"Tamño de datosTodosAgentes.length ");
						seriesTodosAgentes.labelFunction = seriesGrafica_porcentaje;
						//labelFunction = seriesGrafica_porcentaje;
					}
	
				}
			}
			
			private function result_graficaAgentesConectados(event:ResultEvent):void{
				if (event.result != null){
					datosAgentesConectados= new ArrayCollection();
					
					//Crear la gráfica "Estatus de los agentes conectados"
					datosAgentesConectados = ArrayCollection(event.result);
					
					if (datosAgentesConectados.length != 0){
						//lblAgentesConectados.visible = true;
						pcConectados.visible = true;
						seriesAgentesConectados.visible = true;
						leyConectados.visible = true;
						
						seriesAgentesConectados.labelFunction = seriesGrafica_porcentaje;
					}
				}
			}

			private function faultHandler(event:FaultEvent):void{
				Alert.show(event.fault.faultString,"Error");
			}
			
			protected function chkTodosID_changeHandler():void{
				// TODO Auto-generated method stub
				var condicion:String;
				chkTodosID.selected = true;
				if (chkTodosID.selected == true){
					//Busca todos los estatus
					//en la tabla "conexion_agente", especialmente para 
					//el campo "estado_conexion"
					// 0 - Desconectado
					// 1 - Conectado
					condicion = "0, 1"
						
					//Crear la gráfica  "Estatus de todos los agentes"
					roIndicadorTodosAgentes.buscaEstatusAgentes(condicion);
				}/*else{
					//Inicializar las variables que permiten 
					//crear la gráfica  "Estatus de todos los agentes"
					
					//lblTodosAgentes.visible = false;
					plTodosAgentes.visible = false;
					pcTodosAgentes.dataProvider = datosTodosAgentes;
					pcTodosAgentes.visible = false;
					seriesTodosAgentes.visible = false;
					leyTodosAgentes.visible = false;
				}*/
			}
			
		 
			
			private function result_buscaNumeroLlamadasMaxTiempo(event:ResultEvent):void{
				if (event.result != null){					 
					llamaxtiempo= int(event.result);
				}else{
					Alert.show("No fue posible obtener el número de llamadas en fila que sobrepasan el tiempo máximo de espera","Atención");
				}
			}
			
			//Agentes que sobrepasan el tiempo máximo en la llamda
			 
			
			private function result_buscaNumeroAgentesMaxTiempo(event:ResultEvent):void{
				if (event.result != null){					 
					agtmaxtiempo= int(event.result);
				}else{
					Alert.show("No fue posible obtener el número de agentes que sobrepasan el tiempo máximo en la llamada","Atención");
				}
			}
			
			private function result_graficaLocalConectados(event:ResultEvent):void{
				if (event.result != null){
					localConectados = new ArrayCollection();
					
					localConectados = ArrayCollection(event.result);
					//Alert.show(String(localConectados.length),"Longitud");
				}
			}

			protected function chkTiempoPausa_changeHandler():void{
				// TODO Auto-generated method stub
				 
				if (chkTiempoPausa.selected == true){
					//Genera la gráfica de "Tiempo acumulado en pausa por agente"
					
					//ro
					roGraficaPausa.buscaTiempoAcumulado();
				}else{
					plPausaAgente.visible = false;
					pcPausaAgente.visible = false;
					seriesPausaAgente.visible = false;
				}
			}
			
			private function result_graficaPausaAcumulado(event:ResultEvent):void{
				
				//Alert.show("REsultado Pausa:"+event.result);
				if (event.result != null){
					datosPausaAgentes = ArrayCollection(event.result);
					
					if (datosPausaAgentes.length != 0){
						plPausaAgente.visible = true;
						pcPausaAgente.visible = true;
						seriesPausaAgente.visible = true;
						seriesPausaAgente.labelFunction = seriesGrafica_etiquetaCantidad;
					}else{
						Alert.show("No existen resultados para el indicador 'Tiempo acumulado en pausa por agente'","Información");
						chkTiempoPausa.selected = false;
					}
				}
			}

			//
			protected function chkAgenteLAT_changeHandler():void{
				// TODO Auto-generated method stub
				 
				if ( chkAgenteLAT.selected == true){
					roGraficaLlamAtendidas.buscaLlamadasAtendidas();
				}else{
					plLlamadasAgente.visible = false;
					pcLlamadasAgente.visible = false;
					seriesLlamAtendidas.visible = false;
				}
			}
			
			private function result_graficaLlamAtendidas(event:ResultEvent):void{
				if (event.result != null){
					datosLlamadasAtendidas = ArrayCollection(event.result);
					
					if (datosLlamadasAtendidas.length != 0){
						plLlamadasAgente.visible = true;
						pcLlamadasAgente.visible = true;
						seriesLlamAtendidas.visible = true;
						seriesLlamAtendidas.labelFunction = seriesGrafica_etiquetaCantidad;
					}
				}
			}
			
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:RemoteObject id="roIndicadorLlamAbandonadas" destination="IndicadoresService" fault="faultHandler(event)"  endpoint="{endpoint}">
			<s:method name="buscaIndicador" result="result_llamadasAbandonadas(event)" fault="faultHandler(event)" />
		</s:RemoteObject>
		
		<s:RemoteObject id="roIndicadorLlamAtendidas" destination="IndicadoresService" fault="faultHandler(event)"  endpoint="{endpoint}">
			<s:method name="buscaIndicador" result="result_llamadasAtendidas(event)" fault="faultHandler(event)" />
		</s:RemoteObject>
		
		<s:RemoteObject id="roIndicadorLlamEnFila" destination="IndicadoresService" fault="faultHandler(event)"  endpoint="{endpoint}">
			<s:method name="buscaIndicador" result="result_llamadasEnFila(event)" fault="faultHandler(event)" />
		</s:RemoteObject>
		
		<s:RemoteObject id="roIndicadorMensajeEnFila" destination="IndicadoresService" fault="faultHandler(event)"  endpoint="{endpoint}">
			<s:method name="buscaIndicador" result="result_mensajesEnFila(event)" fault="faultHandler(event)" />
		</s:RemoteObject>
		
		<s:RemoteObject id="roIndicadorAgentesMaxTiempo" destination="IndicadoresService" fault="faultHandler(event)"  endpoint="{endpoint}">
			<s:method name="buscaNumeroAgentesMaxTiempo" result="result_buscaNumeroAgentesMaxTiempo(event)" fault="faultHandler(event)" />
		</s:RemoteObject>
		
		<s:RemoteObject id="roIndicadorLlamadasMaxTiempo" destination="IndicadoresService" fault="faultHandler(event)"  endpoint="{endpoint}">
			<s:method name="buscaNumeroLlamadasMaxTiempo" result="result_buscaNumeroLlamadasMaxTiempo(event)" fault="faultHandler(event)" />
		</s:RemoteObject>

		<s:RemoteObject id="roIndicadorTodosAgentes" destination="IndicadoresService" fault="faultHandler(event)"  endpoint="{endpoint}">
			<s:method name="buscaEstatusAgentes" result="result_graficaTodosAgentes(event)" fault="faultHandler(event)" />
		</s:RemoteObject>
		
		<s:RemoteObject id="roIndicadorAgentesConectados" destination="IndicadoresService" fault="faultHandler(event)"  endpoint="{endpoint}">
			<s:method name="buscaEstatusAgentes" result="result_graficaAgentesConectados(event)" fault="faultHandler(event)" />
		</s:RemoteObject>

		<s:RemoteObject id="roGraficaPausa" destination="IndicadoresService" fault="faultHandler(event)"  endpoint="{endpoint}">
			<s:method name="buscaTiempoAcumulado" result="result_graficaPausaAcumulado(event)" fault="faultHandler(event)" />
		</s:RemoteObject>
		
		<s:RemoteObject id="roGraficaLlamAtendidas" destination="IndicadoresService" fault="faultHandler(event)"  endpoint="{endpoint}">
			<s:method name="buscaLlamadasAtendidas" result="result_graficaLlamAtendidas(event)" fault="faultHandler(event)" />
		</s:RemoteObject>
	</fx:Declarations>
<!-- <s:Label id="lblAgentesConectados" x="350" y="208" width="301" fontSize="17" fontStyle="normal"
						fontWeight="bold" text="Estatus de los agentes conectados"/>  -->
<!-- <s:Label id="lblGraficaPausaAgente" x="35" y="492" width="301" fontSize="15" fontStyle="normal"
						fontWeight="bold" text="Tiempo acumulado en pausa por agente"/>  -->
<!-- <s:Label id="lblGraficaLlamAtendidas" x="356" y="492" width="301" fontSize="15" fontStyle="normal"
						fontWeight="bold" text="Número de llamadas atendidas  por agente"/>  -->
	<s:Button x="710" y="132" width="70" label="Cerrar" click="this.finPopUp()"/>
	<s:BorderContainer x="44" y="32" width="455" borderWeight="1" height="77">
		<mx:CheckBox id="chkTodosED" x="4" y="3" label="Estatus de los agentes, sin contar el estatus desconectado."
					 fontStyle="normal" fontSize="10" fontWeight="normal"  selected="false" change="chkTodosED_changeHandler()"/>
		<mx:CheckBox id="chkTodosID" x="5" y="21" label="Estatus de los agentes, tomando en cuenta todos los estatus."
					 fontStyle="normal" fontSize="10" fontWeight="normal" selected="false" change="chkTodosID_changeHandler()"/>
		<mx:CheckBox id="chkNumAST" x="5" y="39" label="Número de agentes que sobrepasan el tiempo máximo en las llamadas."
					 fontStyle="normal" fontSize="10" fontWeight="normal" selected="false" change="pinta_indicadores()"/>
		<mx:CheckBox id="chkNumLST" x="4" y="57" label="Número de llamadas en fila que sobrepasan el tiempo máximo de espera."
					 fontStyle="normal" fontSize="10"  fontWeight="normal" selected="false" change="pinta_indicadores()"/>
	</s:BorderContainer>
	<s:BorderContainer x="503" y="10" width="281" borderWeight="1" height="115">
		<mx:CheckBox id="chkNumLAB" x="10" y="4" label="Número de llamadas abandonadas."
					 fontStyle="normal" fontSize="10"  selected="false" change="pinta_indicadores()"/>
		<mx:CheckBox id="chkNumLAT" x="10" y="22" label="Número de llamadas atendidas."
					 fontStyle="normal" fontSize="10"  selected="false" change="pinta_indicadores()"/>
		<mx:CheckBox id="chkNumLF" x="10" y="39" label="Número de llamadas en fila." fontStyle="normal"
					 selected="false"  fontSize="10" change="pinta_indicadores()"/>
		<mx:CheckBox id="chkNumMF" x="11" y="57" label="Número de mensajes en fila." fontStyle="normal"
					 selected="false"  fontSize="10" change="pinta_indicadores()"/>
		<mx:CheckBox id="chkTiempoPausa" x="11" y="75" label="Tiempo acumulado en pausa por agente."
					 fontStyle="normal"  fontSize="10" selected="false" change="chkTiempoPausa_changeHandler()"/>
		<mx:CheckBox id="chkAgenteLAT" x="12" y="94" label="Número de llamadas atendidas por agente."
					 fontStyle="normal"  fontSize="10" selected="false" change="chkAgenteLAT_changeHandler()"/>
	</s:BorderContainer>
	<s:Group id="contenedor" x="47" y="673" width="491" height="259" autoLayout="true">
	</s:Group>
	<s:Label x="573"  y="823" width="25" height="12" fontSize="13" fontStyle="normal"  fontWeight="bold" text=" "/>
	<s:Group x="34" y="133" width="654" height="532" autoLayout="true">
		<mx:Panel id="plTodosAgentes" x="15" y="7" title="Estatus de todos los agentes">
			<mx:PieChart id="pcTodosAgentes" visible="true" x="36" y="225" width="298" height="176"
						 dataProvider="{datosTodosAgentes}"
						 showDataTips="true">     
				<mx:series>
					<mx:PieSeries id="seriesTodosAgentes" 
								  field="cantidad"  
								  nameField="nombre" 
								  labelPosition="callout"/>   <!--   <s:Label id="lblTodosAgentes" x="36" y="208" width="301" fontSize="17" fontStyle="normal"
																	fontWeight="bold" text="Estatus de todos los agentes"/>  -->
				</mx:series>
			</mx:PieChart>
			<mx:Legend id="leyTodosAgentes" visible="true" x="35" y="433" width="299" height="28"
					   dataProvider="{pcTodosAgentes}"/>
		</mx:Panel >
		<mx:Panel id="plAgentesConectados" x="325" y="7" title="Estatus de los agentes conectados">
			<mx:PieChart id="pcConectados" visible="true" x="351" y="200" width="299" height="175"
						 dataProvider="{datosAgentesConectados}"
						 showDataTips="true">
				<mx:series>
					<mx:PieSeries id="seriesAgentesConectados" displayName="Series 1" 
								  field="cantidad"
								  nameField="nombre"
								  labelPosition="callout"/>
				</mx:series>
			</mx:PieChart>
			<mx:Legend id="leyConectados" visible="true" width="298" height="29"
					   dataProvider="{pcConectados}"/>
		</mx:Panel >
		<mx:Panel id="plPausaAgente" x="17" y="261" width="303"
				  title="Tiempo acumulado en pausa por agente">
			<mx:PieChart id="pcPausaAgente" dataProvider="{datosPausaAgentes}" x="35" y="522" 
						 width="295" height="202" showDataTips="true">
				<mx:series>
					<mx:PieSeries id="seriesPausaAgente" displayName="Series 1" 
								  field="cantidad" 
								  nameField="nombre"
								  labelPosition="callout"/>
				</mx:series>
			</mx:PieChart>
		</mx:Panel >
		<mx:Panel id="plLlamadasAgente" x="327" y="261" title="Número de llamadas atendidas  por agente">
			<mx:PieChart id="pcLlamadasAgente" x="356" y="522" width="300" height="205" visible="true"
						 dataProvider="{datosLlamadasAtendidas}" showDataTips="true">
				<mx:series>
					<mx:PieSeries id="seriesLlamAtendidas" displayName="Series 1" 
								  field="cantidad"
								  nameField="nombre"
								  labelPosition="callout"/>
				</mx:series>
			</mx:PieChart>
		</mx:Panel >
	</s:Group>
	
</mx:Canvas>