<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009"
		   xmlns:s="library://ns.adobe.com/flex/spark"
		   xmlns:mx="library://ns.adobe.com/flex/mx"
		   width="252" height="314" label="{nombreCatalogo}" creationComplete="Init()"
		   locale="en_ES">
	<fx:Metadata>
		[Event(name="usarioCreated", type="UsuarioEvent")]
		[Event(name="usuarioUpdated", type="UsuarioEvent")]
		[Event(name="usuarioDeleted", type="UsuarioEvent")]
	</fx:Metadata> 

	
	<fx:Script>
		<![CDATA[
			import flash.events.MouseEvent;
			import flash.profiler.showRedrawRegions;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.ValidationResultEvent;
			import mx.messaging.events.MessageEvent;
			import mx.messaging.events.MessageFaultEvent;
			import mx.messaging.messages.AsyncMessage;
			import mx.messaging.messages.ErrorMessage;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ObjectUtil;
			
			import objetosJava.*;
			import objetosJava.Contacto;
			
			import spark.events.GridSelectionEvent;
			import spark.events.IndexChangeEvent;
			
			//Variables generales del sistema
			[Bindable] public var chanel:String;
			[Bindable] public var endpoint:String;
			[Bindable] public var message:String;
			[Bindable] public var nombreCatalogo:String;
			[Bindable] public var id_usr:String; //Variable para reconocer la conversaciÃ³n
			[Bindable] public var usuariologeado:Usuario;
			[Bindable] public var msg:AsyncMessage = new AsyncMessage();
			
			//Variables de uso particular
		
			private function Init():void{
				Alert.okLabel="Aceptar";
			}

			private function enviar_enter(event:KeyboardEvent):void {
				var aux:String="";
				var contacto:Contacto; 
				try{
					if(event.keyCode == 13){
						if(txa_mensaje.text == "\n"){
							txa_mensaje.text="";
						}
						if((txa_mensaje.text != "\n") && (txa_mensaje.text.length > 0)){
							
							//Alert.show("Caracter: "+txa_mensaje.text +" ::: Longitud "+txa_mensaje.text.length );
							contacto = new Contacto();
							contacto.id_usr=int (id_usr);
							contacto.nombre_usr=nombreCatalogo;
							
							rutinaDeEnvio(txa_mensaje.text,"messenger_message",contacto);
							
							aux = usuariologeado.nombre_usr+ " dijo: \n"+
								txa_mensaje.text + aux;
							txa_conversacion.text=txa_conversacion.text + aux;
							
							txa_mensaje.text = "";
						}
						
					}
					if(event.keyCode == 27)
						cerrar();
						
				}catch(error:ErrorEvent){}
				
				// event.keyCode + "/" + event.charCode;
			}
			
			public function cerrar():void{
				if((this != null) &&(parent !=null ))
					parent.removeChild(this);
			}
			
			private function enviar_mensaje_button(event:Event):void{
				var aux:String="";
				if((txa_mensaje.text != "") && (txa_mensaje.text.length > 0)){
					
					var contacto:Contacto = new Contacto();
					contacto.id_usr =  int(id_usr);
					contacto.nombre_usr = nombreCatalogo;
					rutinaDeEnvio(txa_mensaje.text,"messenger_message",contacto);
					
					aux="\n";
					
					aux = usuariologeado.nombre_usr+ " dijo: \n"+
						txa_mensaje.text + aux;
					txa_conversacion.text=txa_conversacion.text + aux;
					
					txa_mensaje.text = "";
				}

			}
			public function rutinaDeEnvio(mensaje:String,type:String,contacto:Contacto):void{
				
				//Si se desea enviar un mensaje de messenger se usa
				// type = "messenger_message"
				
				//Si se envia una desconexion entonces se usa
				// type = "disconect-message"
					var obj:Object = new Object();
					var aux:String = "";
					obj["nombre"] = contacto.nombre_usr; //El nombre del contacto con quien comparto la conversacion
					obj["usuario"] = contacto.id_usr; //El id_usr con quien comparto la conversacion
					obj["f_nombre"]=usuariologeado.nombre_usr;//Nombre del usuario en sesion
					obj["f_id_usr"]=usuariologeado.id_usr; //ID_USR del usuario en sesion
					obj["type"] = type; 
					obj["message"]=mensaje;
					msg.headers = obj;
					messageProducer.send(msg); 
				
			}
		
			protected function messageProducer_faultHandler(event:MessageFaultEvent):void
			{
				Alert.show(event.message.faultString+'\n '+event.message.faultDetail+event.message.faultCode,"Error");
			}
			
			public function llegoMensaje(mensaje:String):void{
				var aux:String = nombreCatalogo + " dijo: \n"+mensaje+"\n";
				
				txa_conversacion.text = txa_conversacion.text +aux;
			}
			

		]]>
	</fx:Script>

	
	<fx:Declarations>
		<s:Producer id="messageProducer" destination="agentes" channelSet="{msjChannelEstado}" 
					fault="messageProducer_faultHandler(event)" />
		
		<s:ChannelSet  id="msjChannelEstado" > 
			<s:channels>
				<s:AMFChannel uri= "{message}"/>
			</s:channels>
		</s:ChannelSet>

	</fx:Declarations>
	<s:TextArea id="txa_conversacion" x="0" y="0" width="250" height="181" editable="false"/>
	<s:TextArea id="txa_mensaje" x="0" y="180" width="250" height="80" keyUp="enviar_enter(event)"/>
	<s:Button x="134" y="268" width="108" height="36" label="Enviar"
			  click="enviar_mensaje_button(event)"/>
	<s:Button x="10" y="280" label="Cerrar" click="cerrar()"/>


	
</mx:Canvas>

