<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				width="566" height="264" close="finPopUp()" color="#FFFFFF"
				creationComplete="doInit()" layout="absolute"
				title="DCPro Administrar Alarmas Outbound">
	
	<fx:Script>
		<![CDATA[
			import flash.display.Sprite;
			import flash.events.Event;
			import flash.utils.flash_proxy;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.UIComponent;
			import mx.events.CloseEvent;
			import mx.events.DataGridEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.validators.Validator;
			
			
			import objetosJava.*;
			
			import spark.events.TextOperationEvent;
			[Bindable] public var endpoint:String;
			[Bindable] public var id_camp:int;
			[Bindable] public var tipo_camp:String;
			[Bindable] public var campana_out:Campana_Out;
			[Bindable] public var alarma_out:Alarmas_Outbound;
			[Bindable] public var rangomedio:int
			[Bindable] private var validatorArr:Array;
			
			private function doInit():void {
				
				var uic:UIComponent = new UIComponent();
				var circlered:Sprite = new Sprite();
				var circleyellow:Sprite = new Sprite();
				var circlegreen:Sprite = new Sprite();
				
				circlered.graphics.beginFill(0xFF0000);
				circlered.graphics.drawCircle(50, 50, 20);
				circlered.graphics.endFill();
				
				circleyellow.graphics.beginFill(0xFFFF00);
				circleyellow.graphics.drawCircle(50, 100, 20);
				circleyellow.graphics.endFill();
				
				circlegreen.graphics.beginFill(0x00FF00);
				circlegreen.graphics.drawCircle(50, 150, 20);
				circlegreen.graphics.endFill();
				
				uic.addChild(circlered);
				uic.addChild(circleyellow);
				uic.addChild(circlegreen);
				addChild(uic);
				
				rocampana.FindById_Out(id_camp);
				PopUpManager.centerPopUp(this);	
				Prepara_Form();
			}
			
			//funcion que cierra el popup
			private function finPopUp():void {
				PopUpManager.removePopUp(this);
			}
			
			private function Prepara_Form():void{
				rango_bajo.enabled = false;
				rango_medio.enabled = false;		
				rangomedio = alarma_out.rango_bajo + 1;
			}
			
			private function Activa_Edicion():void{
				rango_bajo.enabled = true;
				rango_medio.enabled = true;		
			}
			
			private function Carga_Validaciones():void
			{
				validatorArr = new Array();
				validatorArr.push(NV_rango_bajo);
				validatorArr.push(NV_rango_medio);
			}
			
			public function Cancela_Alarmas():void{
				rango_bajo.text = String(alarma_out.rango_bajo);
				rango_medio.text = String(alarma_out.rango_medio);
				rango_alto.text = String(alarma_out.rango_alto);
				Prepara_Form();			
			}
			
			private function Guarda_Cambios():void{
				var validatorErrorArray:Array;
				var isValidForm:Boolean;
				Carga_Validaciones();
				validatorErrorArray= Validator.validateAll(validatorArr);
				isValidForm = validatorErrorArray.length == 0;
				if(isValidForm)
					Alert.show("¿Esta seguro de Modificar las Alarmas Outbound? ","Información",Alert.OK| Alert.NO,this,Update,null,Alert.OK);	
				else 
					Alert.show("Favor de capturar los datos requeridos", 'Información',Alert.OK);		
			}
			
			private function Update(eventObj:CloseEvent):void{
				if(eventObj.detail==Alert.OK){
					alarma_out.rango_bajo = Number(rango_bajo.text);
					alarma_out.rango_medio = Number(rango_medio.text);
					alarma_out.rango_alto = Number(rango_alto.text);
					roalarmas.Update_AlarmasOutbound(alarma_out);
					Prepara_Form();	
				}else 
					Cancela_Alarmas();
			}
			
			protected function RangoBajo_ChangeHandler(event:TextOperationEvent):void
			{
				var rango:int = int(rango_bajo.text);
				rango = rango + 1;
				rangomedio = rango;
				rango_medioa.text = String(rango);
			}
			
			protected function RangoMedio_ChangeHandler(event:TextOperationEvent):void
			{
				var rango:int = int(rango_medio.text);
				rango = rango + 1;
				rango_alto.text = String(rango);
			}
			
			private function result_FindById_Out(event:ResultEvent):void{
				campana_out = Campana_Out(event.result);	
				roalarmas.Find_AlarmasOutbound(campana_out.id_camp_out);			
			}
			
			private function result_FindAlarmasOutbound(event:ResultEvent):void{
				alarma_out = Alarmas_Outbound(event.result);
				rangomedio = alarma_out.rango_bajo + 1;
			}
			
			private function result_UpdateAlarmasOutbound(event:ResultEvent):void{
				var ok:int = int(event.result);
				if(ok)
					Alert.show("Las Alarmas Outbound han sido modificadas");		
			}
			
			private function faultHandler(event:FaultEvent):void
			{
				Alert.show(event.fault.faultString,"Error");
			}		
			
		]]>
	</fx:Script>
	<fx:Declarations>
		
		<mx:NumberValidator id="NV_rango_bajo"  source="{rango_bajo}"  property="text"  domain="int" maxValue="98" trigger="{btnGuardar}" triggerEvent="click" exceedsMaxError="Ingresa un valor menor a 98"/>
		<mx:NumberValidator id="NV_rango_medio" source="{rango_medio}" property="text"  domain="int" minValue="{rangomedio}" maxValue="99" trigger="{btnGuardar}" triggerEvent="click"
							exceedsMaxError="Ingresa un valor menor a 99" lowerThanMinError="El valor debe ser mayor al nivel bajo"/>
		
		<s:RemoteObject id="rocampana" destination="CampanaService" fault="faultHandler(event)"  endpoint="{endpoint}">
			<s:method name="FindById_Out" result="result_FindById_Out(event)" fault="faultHandler(event)" />
		</s:RemoteObject>	
		
		<s:RemoteObject id="roalarmas" destination="AlarmasService" fault="faultHandler(event)"  endpoint="{endpoint}">
			<s:method name="Find_AlarmasOutbound" result="result_FindAlarmasOutbound(event)" fault="faultHandler(event)" />
			<s:method name="Update_AlarmasOutbound" result="result_UpdateAlarmasOutbound(event)" fault="faultHandler(event)" />
		</s:RemoteObject>
	</fx:Declarations>
	<s:TextInput id="rango_bajoa" x="249" y="29" width="51" text ="0" enabled="false"/>
	<s:TextInput id="rango_medioa" x="249" y="84" width="51" text="{rangomedio}" enabled="false"/>
	<s:Label x="117" y="39" text="Porcentaje menor del:"/>
	<s:Label x="117" y="94" text="Porcentaje medio del"/>
	<s:Label x="117" y="149" text="Porcentaje alto del"/>
	<s:TextInput id="rango_alto" x="249" y="139" width="51" restrict="0-9" text="{alarma_out.rango_alto}" enabled="false"/>
	<s:TextInput id="rango_altoa" x="348" y="139" width="49" text="100"  enabled="false" />
	<s:Label x="304" y="149" text="%  al"/>
	<s:Label x="404" y="149" text="%"/>
	<s:Button x="472" y="195" width="69" label="Salir" click="this.finPopUp()"/>
	<s:HGroup x="35" y="188" width="266" height="31">
		<s:Button id="btnEdita" label="Editar" click="Activa_Edicion()"/>
		<s:Button id="btnGuardar" label="Guardar" click="Guarda_Cambios()"/>
	</s:HGroup>
	<s:Form x="297" y="0" width="257" height="131">
		<s:layout>
			<s:BasicLayout/>
		</s:layout>
		<s:FormItem x="-8" y="64" width="254" required="true">
			<s:layout>
				<s:BasicLayout/>
			</s:layout>
			<s:Label x="-15" y="10" text="%  al"/>
			<s:TextInput id="rango_medio" x="28" y="-1" width="49" restrict="0-9" text="{alarma_out.rango_medio}" change="RangoMedio_ChangeHandler(event)"/>
			<s:Label x="84" y="6" text="%"/>
		</s:FormItem>
		<s:FormItem x="-8" y="14" width="254" required="true">
			<s:layout>
				<s:BasicLayout/>
			</s:layout>
			<s:Label x="-16" y="-2" height="18" text="%  al" verticalAlign="bottom"/>
			<s:TextInput id="rango_bajo" x="27" y="-6" width="48"
						 change="RangoBajo_ChangeHandler(event)" restrict="0-9"
						 text="{alarma_out.rango_bajo}"/>
			<s:Label x="83" y="2" height="13" text="%"/>
		</s:FormItem>
	</s:Form>
</mx:TitleWindow>
