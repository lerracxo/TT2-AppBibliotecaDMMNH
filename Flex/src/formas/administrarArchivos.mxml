<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   width="838" height="422"
			   label="{nombreCatalogo}" creationComplete="init()">

	<fx:Script>
		<![CDATA[
			// Para las referencias de los archivos
			import flash.net.FileFilter;
			import flash.net.FileReference;
			import flash.net.FileReferenceList;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import objetosJava.*;
			
			
			[Bindable]
			private var selectedFileReferences:ArrayCollection = new ArrayCollection();
			private var fileRefList:FileReferenceList;
			private var archivo: FileReference;
			//private var selectedFiles:ArrayCollection = new ArrayCollection();
			
			var imageTypes:FileFilter = new FileFilter("Images (*.jpg, *.jpeg, *.gif, *.png)", "*.jpg; *.jpeg; *.gif; *.png");
			var allTypes:Array = new Array(imageTypes); // Configura el filtro de archivos que se desean 
			
			//Variables generales del sistema
			[Bindable] public var chanel:String;
			[Bindable] public var endpoint:String;
			[Bindable] public var message:String;
			[Bindable] public var nombreCatalogo:String;
			[Bindable] public var usuariologeado:Usuario;
			
			
			private function init():void{
			
			}
			
			private function browseFiles(event:MouseEvent):void
			{
				fileRefList = new FileReferenceList();
				fileRefList.addEventListener(Event.SELECT, selectFiles);
				
				//fileRefList.browse(allTypes);
				fileRefList.browse();
			}
			
			private function selectFiles(e:Event):void
			{			
				for each(var fileRef : FileReference in fileRefList.fileList)
				{
					fileRef.addEventListener(ProgressEvent.PROGRESS, funcionProgreso);
					fileRef.load();
					selectedFileReferences.addItem(fileRef);
				}
			}
			
			protected function funcionProgreso(evt:ProgressEvent):void{
				ta_debugErrores.text =""+ ((evt.bytesLoaded/evt.bytesTotal)*100)+"% Loaded " + evt.bytesLoaded + " of " + evt.bytesTotal + " bytes.";
			}
			
			private function uploadFiles(e:MouseEvent):void
			{		
				try{
					Alert.show("Len file: "+selectedFileReferences.length);
					
					for( var i:int =0; i < selectedFileReferences.length; i++) {
						subeArchivos.doUpload(selectedFileReferences[i].name, selectedFileReferences[i].data);
					}
				}
				catch(e:Error){
					Alert.show(e.toString(),"Error");
				}
			}
			
			protected function doUploadResult(event:ResultEvent):void
			{
				if(Boolean(event))
					Alert.show("Todo salió bien :)");
				else
					Alert.show("Sucedió un error");
			}
			
			protected function faultHandler(event:FaultEvent):void
			{
				Alert.show(event.toString(),"Error")
			}
			
			// Procedimiento para cerrar
			protected function cerrar(event:MouseEvent){
				// Quita esta pestana
				parent.removeChild(this);
			}
		]]>
	</fx:Script>

	<fx:Declarations>
		<s:RemoteObject id="subeArchivos" destination="SubeArchivoService" fault="Alert.show(event.fault.message);" endpoint="{endpoint}">
			<s:method name="doUpload" result="doUploadResult(event)" fault="faultHandler(event)" />
		</s:RemoteObject>
	</fx:Declarations>
	<s:DataGrid id="dataGrid" x="10" y="54" width="818" height="256" fontFamily="Verdana"
				fontSize="11" dataProvider="{selectedFileReferences}">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn dataField="name" headerText="Nombre"></s:GridColumn>
				<s:GridColumn dataField="size" headerText="Tamaño"></s:GridColumn>
			</s:ArrayList>
		</s:columns>
	</s:DataGrid>
	<s:HGroup x="10" y="10" width="818" height="36" fontFamily="Verdana" fontSize="11">
		<s:Button label="Subir" click="uploadFiles(event)"/>
		<s:Button label="Seleccionar" click="browseFiles(event)"/>
		<s:Button label="Eliminar"/>
		<s:Button label="Cerrar" click="cerrar(event)"/>
	</s:HGroup>
	<s:TextArea id="ta_debugErrores" x="10" y="318" width="662" height="25"/>
	
</mx:Canvas>
