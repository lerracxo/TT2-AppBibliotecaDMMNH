<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009"
		   xmlns:s="library://ns.adobe.com/flex/spark"
		   xmlns:mx="library://ns.adobe.com/flex/mx"
		   label="{nombreCatalogo}" creationComplete="init()"
		   locale="en_ES">

	<fx:Script>
		<![CDATA[
			import com.adobe.crypto.SHA1;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.UIComponent;
			import mx.events.CloseEvent;
			import mx.events.ValidationResultEvent;
			import mx.managers.PopUpManager;
			import mx.messaging.messages.ErrorMessage;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ObjectUtil;
			import mx.validators.Validator;
			
			import objetosJava.Reporte;
			import objetosJava.TipoUsuario;
			import objetosJava.Usuario;
			
			import spark.events.DropDownEvent;
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			
			[Bindable] public var chanel:String;
			[Bindable] public var message:String;
			[Bindable] public var usuariologeado:Usuario;
			[Bindable] public var usuario:Usuario = new Usuario();
			[Bindable] public var tipoUsuario:TipoUsuario;
			[Bindable] public var datosGrid:ArrayCollection;
			[Bindable] public var datosTipoUsuario:ArrayCollection;
			[Bindable] public var datosPosicion:ArrayCollection;
			[Bindable] public var endpoint:String;
			[Bindable] public var nombreCatalogo:String;
			[Bindable] private var validatorArr:Array;
			[Bindable] public var bloqueo:int;			
			/*
			 * Función inicial del sistema 
			*/
			private function init():void{
			
			}
			
			/*
			 * Función que pide el reporte de visitantes 
			*/
			private function generaReporteVisitantes():void{
				var reporte:Reporte = new Reporte();
				reporte.nombre_jasper = "rpt_estadisticasVisita.jasper";
				ro_reporteService.reporteVisitantes(reporte);
			}
			
			/*
			 * Función que recibe el resultado de la generación de un reporte 
			*/
			private function reporteVisitantesResult(event:ResultEvent):void{
				var reporte:Reporte = event.result as Reporte;
				if(reporte.reporte == null ){
					Alert.show("El reporte no fue generado satisfactoriamente.","Error");
				}
				
				Alert.show('¿Desea guardar el reporte?', 'Entrega de Reporte', Alert.YES|Alert.NO, null,
					function (event:CloseEvent):void{
						if(event.detail == Alert.YES){
						var file:FileReference= new FileReference();
						file.save(reporte.reporte,reporte.nombre_archivo);
						}
					});
			}
			
			/*
			 * Error
			*/
			private function faultHandler(event:FaultEvent):void{
				Alert.show(event.toString(),"Error");
			}
			
		]]>
	</fx:Script>
	
	
	<fx:Declarations>
		<s:RemoteObject id="ro_reporteService" destination="ReporteService" fault="faultHandler(event)" endpoint="{endpoint}">
			<s:method name="reporteVisitantes" result="reporteVisitantesResult(event)" fault="faultHandler(event)" />

		</s:RemoteObject>
	</fx:Declarations>
	<s:DataGroup width="100%" height="100%"/>
	<s:HGroup x="10" y="10" width="100%">
	</s:HGroup>
	<s:VGroup x="10" y="38" width="200" height="200">
		<s:Button label="Reporte de Visitantes" click="generaReporteVisitantes()"/>
	</s:VGroup>
	
	
	
</mx:Canvas>
