<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009"
		   xmlns:s="library://ns.adobe.com/flex/spark"
		   xmlns:mx="library://ns.adobe.com/flex/mx"
		   label="{nombreCatalogo}" creationComplete="deshabilita_campos()" locale="en_ES"
		   width="762" height="360">


	
	<fx:Script>
		<![CDATA[		
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.data.ItemReference;
			import mx.events.CloseEvent;
			import mx.events.ValidationResultEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.validators.Validator; 
			
			import spark.components.gridClasses.GridColumn;
			import spark.components.gridClasses.GridSelectionMode;
			import spark.events.GridSelectionEvent;
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			
			import mx.charts.Legend;
			import mx.containers.Panel;
			import objectosJava.*;
			
			[Bindable] public var chanel:String;
			[Bindable] public var usuariologeado:Usuario;
			[Bindable] public var message:String;			 
			[Bindable] private var legend:Legend;
			[Bindable] private var panel:Panel;
			
			[Bindable] public var endpoint:String; 
			[Bindable] public var nombreCatalogo:String;			
			[Bindable] public var datosCampanias:ArrayCollection;
			[Bindable] public var datosGrid:ArrayCollection;
			[Bindable] public var datosGridresult:ArrayCollection;
			[Bindable] public var arr_integracion_CRM:ArrayCollection;
			[Bindable] public var integracion_CRM_aux:ArrayCollection;
			[Bindable] public var cadena:String;
			[Bindable] public var nombreResultado:String; 
			[Bindable] public var valCheck:int;
			[Bindable] public var cofirmaGuardar:Alert;
			[Bindable] public var valCambios:int;
			
			private function deshabilita_campos():void
			{
				dg.enabled=false;
				dg1.enabled=false;
				combo.enabled=false;
				resultxt.enabled=false;
				agrega_resul.enabled=false;
				elimina_resul.enabled=false;
				resul_integra.enabled=false;      
				integra_resul.enabled=false;       
				resul_integra_todos.enabled=false; 
				integra_resul_todos.enabled=false;
				guardar.enabled=false;	
				chktodos.enabled=false;
				cancelar.enabled=false; 
				editar.enabled=true;
				valCheck=0; 
				//chktodos=null; 
				arr_integracion_CRM.removeAll();
				//incampana.findTodosResultados();
				datosGrid.removeAll();
				datosGridresult.removeAll();
				//combo.clear();
	            
			}
			private function habilita_campos():void
			{
				dg.enabled=true;
				dg1.enabled=true;
				combo.enabled=true;
				resultxt.enabled=true;
				agrega_resul.enabled=true;
				elimina_resul.enabled=true;
				//resul_integra.enabled=true;      
				//integra_resul.enabled=true;       
				//resul_integra_todos.enabled=true; 
				//integra_resul_todos.enabled=true;
				guardar.enabled=true;	
				editar.enabled=false
				cancelar.enabled=true;	
				chktodos.enabled=true;
				
				cargaDatos();
			}
			
			private function cargaDatos():void
			{
				valCambios=0;
				roCampaniaServicio.findAll();	
				incampana.Find_All();
				
			}
			
			private function asignaValorCheck(evt:MouseEvent):void {
				
				if (valCambios==1){
					Alert.okLabel = "Aceptar";
					Alert.show("Se han realizado cambios en la campaña actual guarda o cancela los cambios.");
					//return;
					chktodos.selected=false;
					valCheck=0;
				}else {
				
					if(CheckBox(evt.target).selected) {
						//cargaDatos();
						valCheck=1;
						combo.enabled=false;
						//ResultadosTodos();
						incampana.findTodosResultados();
						
					} else {
						valCheck=0;
						combo.enabled=true;
						
					}
					
					if(valCheck ==1) 
					{
						//Alert.show("valCheck= "+valCheck);
						incampana.findTodosResultados();//guardaResultadosTodos(); 
					} 
					if (valCheck == 0) 
					{
						//Alert.show("valCheck= "+valCheck);
						incampana.findResultadoPorId(int (combo.selectedItem.id_camp));
					}
					
				}
				
			}
			
			private  function cmb_campanas (event:IndexChangeEvent):void{
				if(valCambios==1){
					Alert.okLabel = "Aceptar";
					Alert.show("Se han realizado cambios en la campaña actual guarda o cancela los cambios.");
					//return;
					
				}else{
					incampana.findById(int (combo.selectedItem.id_camp));
				}
				
			}
			
			private function ConfirmaGuardaResultados(event:Event):void{
				var cadena:String;
				if ( arr_integracion_CRM == null || arr_integracion_CRM.length == 0 ){
					Alert.show("No existen registros para guardar","Error");
					
					//Si el usuario desea cerrar la ventana
					//if (bndCerrarVentana == 1 )
					//	this.finPopUp();
				}else{ 						 
					
					 Alert.show("¿Está seguro de los cambios en los Resultados Integración CRM? ","Información", 3, this, guardaResultados);
				 
				}
				
			}
			
			

			private function guardaResultados(event:CloseEvent):void
			{
				//Alert.show("ENtra a guardaResultados");
				if(valCheck ==1) 
				{
					guardaResultadosTodos();
				} 
                if (valCheck == 0) 
			    {
					guardaIntegra()
				}
				valCambios=0;
			}
			
			private function guardaResultadosTodos():void
			{
				// Elimina todos los resultados deseados de  todas las campañas
				for (var ind:int =0; ind<datosGrid.length;ind++)
				{
					//Alert.show(String(datosGrid.length));
					//Alert.show(String (ind) + datosGrid.getItemAt(ind).descripcion);
					if (datosGrid.getItemAt(ind).descripcion =="Eliminar")
					{
					//	Alert.show("Se elimina  " +String(datosGrid.getItemAt(ind).nombre)+" de lacampaña "+ String(datosCampanias.getItemAt(camp).id_camp));
						incampana.delete_integracionTodos( datosGrid.getItemAt(ind).id_int_crm);
					}
				}
				for (var camp:int=0; camp<datosCampanias.length;camp++)
				{

					for (var indxt:int =0; indxt<arr_integracion_CRM.length;indxt++)
					{   
						var obintegratodos:integracion_crm;
						obintegratodos=new integracion_crm();
						obintegratodos.descripcion=arr_integracion_CRM.getItemAt(indxt).descripcion;
						obintegratodos.estatus=arr_integracion_CRM.getItemAt(indxt).estatus;
						obintegratodos.id_int_crm=arr_integracion_CRM.getItemAt(indxt).id_int_crm;
						obintegratodos.nombre=arr_integracion_CRM.getItemAt(indxt).nombre;
						if (indxt < 6)
						{							
							incampana.update_integracion(arr_integracion_CRM.getItemAt(indxt).estatus,arr_integracion_CRM.getItemAt(indxt).id_int_crm);
						}
						else 
						{
							if (arr_integracion_CRM.getItemAt(indxt).descripcion=="Agregar")
							{
							//Alert.show(String(datosCampanias.getItemAt(camp).id_camp));
							incampana.consulta_integracion(datosCampanias.getItemAt(camp).id_camp,arr_integracion_CRM.getItemAt(indxt).id_int_crm,
								                           arr_integracion_CRM.getItemAt(indxt).descripcion,arr_integracion_CRM.getItemAt(indxt).estatus )
							}
							 
						}
							
						
					}
					
				}
				deshabilita_campos();
				 
			}
			private function guardaIntegra():void
			{
				var obintegra:integracion_crm;
				obintegra=new integracion_crm();
				//Alert.show("Entra");
				//Alert.show(String(datosGrid.length));
				if (valCheck == 0)
				{
					
					for (var ind:int =0; ind<datosGrid.length;ind++)
					{
						//Alert.show("Entra a for ");
						//Alert.show(String (ind) + datosGrid.getItemAt(ind).descripcion);
						if (datosGrid.getItemAt(ind).descripcion =="Eliminar")
						{
							incampana.delete_integracion(int (combo.selectedItem.id_camp),datosGrid.getItemAt(ind).id_int_crm);
						}
					}
				
				}
				
				for (var indx:int =0; indx<arr_integracion_CRM.length;indx++)
				{
					//var indice:int;}
					//Alert.show(String(indx));
					//Alert.show(String(arr_integracion_CRM.getItemAt(indx).descripcion));
					obintegra.descripcion=arr_integracion_CRM.getItemAt(indx).descripcion;
					obintegra.estatus=arr_integracion_CRM.getItemAt(indx).estatus;
					obintegra.id_int_crm=arr_integracion_CRM.getItemAt(indx).id_int_crm;
					obintegra.nombre=arr_integracion_CRM.getItemAt(indx).nombre;
					if (indx < 6)
					{
						//Alert.show(String(arr_integracion_CRM.getItemAt(i).id_int_crm));
						//Alert.show(String(arr_integracion_CRM.getItemAt(i).estatus));
						//incampana.update_integracion(obintegra)
						 incampana.update_resultado(arr_integracion_CRM.getItemAt(indx).estatus,int (combo.selectedItem.id_camp),arr_integracion_CRM.getItemAt(indx).id_int_crm)
					}
					else 
					{
						//Alert.show("Hay resistros no  base");
						if (arr_integracion_CRM.getItemAt(indx).descripcion=="Agregar")
						{
							//Alert.show("Se agrega registro " + indx);
							//
							incampana.create_integracion(int (combo.selectedItem.id_camp),arr_integracion_CRM.getItemAt(indx).id_int_crm,1);
						}
						else
						{
							obintegra.descripcion=null;
							incampana.update_integracion(arr_integracion_CRM.getItemAt(indx).estatus,arr_integracion_CRM.getItemAt(indx).id_int_crm)
						}
					}
					
				}
				deshabilita_campos();
				
				
			}
			
			private function CancelaIntegraCRM():void{
				deshabilita_campos();
				valCambios=0;
			}
			
			
			private function agregaDeIntegraAresultado(posicion:int):void
			{    
				var obinteres:integracion_crm;
				obinteres=new integracion_crm();	
				//Alert.show(String(posicion));
				/*if (arr_integracion_CRM.getItemAt(posicion).descripcion == null)
				{
					obinteres.descripcion="Eliminar";
				}else
				{
					obinteres.descripcion=arr_integracion_CRM.getItemAt(posicion).descripcion;
				}*/				
				obinteres.descripcion="Eliminar";
				obinteres.estatus=arr_integracion_CRM.getItemAt(posicion).estatus;
				obinteres.id_int_crm=arr_integracion_CRM.getItemAt(posicion).id_int_crm;
				obinteres.nombre=arr_integracion_CRM.getItemAt(posicion).nombre;					
				datosGrid.addItem( obinteres);		
				arr_integracion_CRM.removeItemAt(posicion);
				valCambios=1;
				
			}
			private function asigna_valor_check():void  
			{
					var indice:int;
					indice=dg1.selectedIndex;
					//Alert.show(String(indice),"Error");
					
			}		 
			
			private function integra_resultado():void 
			{
				var indice:int;
				var tamaño:String;
				var cadena2:String;
				indice=dg1.selectedIndex;
				//Alert.show(String(indice),"Error");
				
				if (indice != -1){
					if (arr_integracion_CRM.getItemAt(indice).id_int_crm >6){
						
						agregaDeIntegraAresultado(indice);
					}
					else
					{
						
						Alert.show("El registro seleccionado  no  puede quitarse de la lista","Error");						
					}
				}else
				{
					Alert.show("Favor de seleccionar un resultado asignado","Información");	
				}
				//Alert.show(String(datosGrid.length));
				if (datosGrid.length>0){
					elimina_resul.enabled=true;					 
				}
					
			}
			private function integra_resultado_todos():void 
			{				
				var  i:int;
				var  tamanio:int;
				var  posicion:int;
				var localIntegracion:ArrayCollection = dg1.dataProvider as ArrayCollection;
				var localDisponible:ArrayCollection = dg.dataProvider as ArrayCollection;
				var objresint:integracion_crm;
				
				tamanio=localIntegracion.length;
				
				if (tamanio == 6){					
					Alert.show("No hay registros que se puedan  eliminar de esta campaña","Error");	
				}else
				{ 
					Alert.show("Existen registros base que no pueden ser eliminados","Información");
					for( i=tamanio -1 ; i>=0; i--)
					{			
						objresint=new integracion_crm();
						
						if (localIntegracion.getItemAt(i).descripcion == null)
						{
							objresint.descripcion="Eliminar";
						}else
						{
							objresint.descripcion= String(localIntegracion.getItemAt(i).descripcion);
						}
						objresint.estatus= int(localIntegracion.getItemAt(i).estatus);
						objresint.id_int_crm= int(localIntegracion.getItemAt(i).id_int_crm);
						objresint.nombre= String(localIntegracion.getItemAt(i).nombre);					
											
						if (i>5)
						   {
							
							localIntegracion.removeItemAt(i);							
							datosGrid.addItem(objresint);
						   }					
					} 
			   }
				//Alert.show(String(datosGrid.length));
				if (datosGrid.length>0){
					elimina_resul.enabled=true;					 
				}
				valCambios=1;
			}
			
			private function busca_resultado_base(lista:Array, id:int):int
			{
				var resp:int=0;
				
				for (var indice:int=0; indice<lista.lenght;indice++)
				{
					if(lista[indice]==id)
					{
						resp=1;
						break;
					}
				}
				return resp;
			}
			
			private function resultado_integra():void 
			{						
				var indice:int;
				var tamaño:String;
				var cadena2:String;
				indice=dg.selectedIndex;
				//Alert.show(String(datosGrid.length));
				
				 if (indice != -1){
					 agregaDeResultadoAintegra(indice);					 
				 }else
				 {
					 Alert.show("Favor de seleccionar un resultado disponible","Información");	
				 }
				 
				 if (datosGrid.length==0){
					 elimina_resul.enabled=false;					 
				 }		
				 
				
				
			}
			private function resultado_integra_todos():void 
			{
				
				var  i:int;
				var objresint:integracion_crm;
				objresint=new integracion_crm();
				
				//Alert.show(String(datosGrid.length));
				for( i=datosGrid.length -1;  i>=0; i--){
					//Alert.show("quita: "+i + datosGrid.getItemAt(i).nombre);
				     agregaDeResultadoAintegra(i);
				}
				/*if (datosGrid.length == 0){					
					Alert.show("No hay registros","Error");	
				}else {
					for( i=0; i<datosGrid.length; i++)
					{						
						var objprueba:integracion_crm;
						objprueba=new integracion_crm();
						 
						objprueba.descripcion=datosGrid.getItemAt(i).descripcion;
						objprueba.estatus=datosGrid.getItemAt(i).estatus;
						objprueba.id_int_crm=datosGrid.getItemAt(i).id_int_crm;
						objprueba.nombre=datosGrid.getItemAt(i).nombre;					
						//arr_integracion_CRM.addItem( objprueba);	
						//integracion_CRM_aux.addItem(objprueba);
						datosGridresult.removeItemAt(i);
					}
					//datosGrid.removeAll();
					//datosGridresult.removeAll();
				}
				*/
					 
				if (datosGrid.length==0){
					elimina_resul.enabled=false;					 
				}
				//valCambios=1;
				
			}
			private function agregaDeResultadoAintegra(posicion:int):void
			{    
				var objprueba:integracion_crm;
				objprueba=new integracion_crm();
				var indice:int;
				objprueba.descripcion="Agregar";
				objprueba.estatus=datosGrid.getItemAt(posicion).estatus;
				objprueba.id_int_crm=datosGrid.getItemAt(posicion).id_int_crm;
				objprueba.nombre=datosGrid.getItemAt(posicion).nombre;
				
				arr_integracion_CRM.addItem( objprueba);
				datosGrid.removeItemAt(posicion);
				
				//Alert.show("Tamaño aux: "+ integracion_CRM_aux.length)
				
				valCambios=1;
			}
			private function Elimina_Resultado(event:CloseEvent):void{
				
				
				if (event.detail == Alert.YES){
					confirmaElimina_resultado(); 				
					//Alert.show( "Tu Respuesta fue Si");
				}
				
				
				
				
			}
			
			
			private function asigna_resultado():void
			{
				var validaresultado1:ValidationResultEvent= SV_resultado.validate();
				   nombreResultado=resultxt.text;
					if(validaresultado1.type!= ValidationResultEvent.VALID){					
						Alert.show("Favor de verificar el nombre del resultado","Error");
				}else
				{					
					  incampana.consultaExisteResultado(nombreResultado);

				}
					resultxt.text=null;	
			}
			
			private function confirmaElimina_resultado():void
			{
				//var validaresultado1:ValidationResultEvent= SV_resultado.validate();
				var indice:int;
				var cadena:String;
				
				indice=dg.selectedIndex;
				cadena=dg.selectedItem.id_int_crm ;
				incampana.Remove_Resultado(int(cadena))			
				
			}
		 
		
			//Funciones de Botones
			private function resul_FindAll(event:ResultEvent):void
			{
				datosGrid = ArrayCollection(event.result)
				dg.dataProvider = datosGrid	;
				//Alert.show(String(datosGrid.length));
				//incampana.findTodosResultados();
				 
				if (datosGrid.length>0){
					elimina_resul.enabled=true;
					resul_integra.enabled=true;
					resul_integra_todos.enabled=true;
				}else{
				
					elimina_resul.enabled=false;
					resul_integra.enabled=false;
					resul_integra_todos.enabled=false;
					
				}
				 
			}
			
			private function resultHandlerFindAll(event:ResultEvent):void
			{
				datosGrid = ArrayCollection(event.result)
				dg.dataProvider = datosGrid	;
				//Alert.show(String(datosGrid.length));
				//incampana.findTodosResultados();
				
				if (datosGrid.length>0){
					elimina_resul.enabled=true;
					resul_integra.enabled=true;
					resul_integra_todos.enabled=true;
				}else{
					
					elimina_resul.enabled=false;
					resul_integra.enabled=false;
					resul_integra_todos.enabled=false;
					
				}
				
			}
			
 
			private function resultHandlerFindAllin(event:ResultEvent):void
			{
				datosGridresult = ArrayCollection(event.result)
				dg1.dataProvider = datosGridresult	;
			 
				
			}
			
			private function faultHandler(event:FaultEvent):void
			{
				Alert.show(event.fault.faultString,"Error");
			}
			
			private function result_FindById(event:ResultEvent):void{
				arr_integracion_CRM = ArrayCollection(event.result)
				dg1.dataProvider = arr_integracion_CRM	
				if (arr_integracion_CRM.length>0)
				{
					resul_integra.enabled=true;      
					integra_resul.enabled=true;       
					resul_integra_todos.enabled=true; 
					integra_resul_todos.enabled=true;
					
				}else
				{				
					resul_integra.enabled=false;      
					integra_resul.enabled=false;       
					resul_integra_todos.enabled=false; 
					integra_resul_todos.enabled=false;
				}
				
				//elimina_resul.enabled=false;
				 //resul_integra.enabled=false;
				//resul_integra_todos.enabled=false;
				incampana.findResultadoPorId(int (combo.selectedItem.id_camp));
				
			}	 
			
			private function cerrar():void
			{
				currentState="grid";
			}
			private function result_findAll(event:ResultEvent):void{
				datosCampanias = ArrayCollection(event.result)
			}
			private function resultHandlerNuevoResultado():void
			{
				//Alert.show('El registro se agrego exitosamente' ,"Información")
				incampana.Find_All();
								
			}
			private function resultHandlerEliminaResultado():void
			{
			//	Alert.show('El registro se elimino exitosamente' ,"Información")
				incampana.Find_All();			
				
			}
			private function resultHandlerUpdateIntegracion():void
			{
				//Alert.show('El registro se actualizaron exitosamente' ,"Información")
				incampana.Find_All(); 
				
			}
			private function resultHandlerConsultaIntegracion():void
			{
				//Alert.show('El registro se agregó exitosamente a todas las campañas' ,"Información")
				//incampana.Find_All(); 
				
			}
			private function resultHandlerinsertaCampanaIntegracion():void
			{
				
			}
			
			private function resultHandlerValidaResultado(event:ResultEvent):void
			{ 
				
				if (int(event.result) == 0 ){				
					 
					incampana.Create_resultado(nombreResultado);
					
						 				   
				}else{
					Alert.show("El nombre del resultado ya existe, favor de verificarlo","Error");
				}
				
			}
			
			
			public function cambioEstatus(estatusNuevo:int):void{
				var indice:int;
				///Alert.show(String (estatusNuevo));
				//Inicialización de variables
				indice = dg1.selectedIndex;
				
				//Actualiza el estatus
				if (indice != -1)
					arr_integracion_CRM.getItemAt(indice).estatus = estatusNuevo;
			}
			
 
			
							
		]]>
	</fx:Script>
	<mx:states>
		<s:State name="grid"/>
		<s:State name="alta_modificacion"/>
	</mx:states>
	
 <fx:Declarations>	
	 <s:RemoteObject id="roCampaniaServicio" destination="CampanaService" endpoint="{endpoint}"
					 fault="faultHandler(event)">
		 <s:method fault="faultHandler(event)" name="findAll" result="result_findAll(event)"/>
	 </s:RemoteObject>
	 <s:RemoteObject id="incampana" destination="C_Integracion_CRMService" endpoint="{endpoint}"
					 fault="faultHandler(event)">
		 <s:method fault="faultHandler(event)" name="Find_All" result="resultHandlerFindAll(event)"/>
		 <s:method name="Create_resultado" result="resultHandlerNuevoResultado()" fault="faultHandler(event)" />
		 <s:method name="create_integracion" result="resultHandlerNuevoResultado()" fault="faultHandler(event)" />
		 <s:method name="Remove_Resultado" result="resultHandlerEliminaResultado()" fault="faultHandler(event)" />
		 <s:method name ="delete_integracion" fault="faultHandler(event)" />
		 <s:method fault="faultHandler(event)" name="find_all_integracion" result="result_FindById(event)"/> 
		 <s:method fault="faultHandler(event)" name="findById" result="result_FindById(event)"/>
		 <s:method name="update_integracion" result="resultHandlerUpdateIntegracion()" fault="faultHandler(event)" />
		 <s:method name="update_resultado" result="resultHandlerUpdateIntegracion()" fault="faultHandler(event)" />
		 
		 <s:method name="consulta_integracion" result="resultHandlerConsultaIntegracion()" fault="faultHandler(event)" />
		 <s:method name="delete_integracionTodos"  fault="faultHandler(event)" />
		 <s:method name="consultaExisteResultado" result="resultHandlerValidaResultado(event)"  fault="faultHandler(event)" />
		 <s:method name="findResultadoPorId" result="resultHandlerFindAll(event)"  fault="faultHandler(event)" />
		 <s:method name="findTodosResultados" result="resul_FindAll(event)"  fault="faultHandler(event)" />
		 
		
		 
	 </s:RemoteObject>
	 
	 <mx:StringValidator id="SV_resultado" source="{resultxt}" property="text" required="true"  minLength="2"
						 requiredFieldError="Es necesario capturar el nombre del resultado"/>
	  
</fx:Declarations>
	<fx:Style>

	</fx:Style>
	<s:DataGrid id="dg" includeIn="grid" x="71" y="87" width="183" height="210" 
				requestedRowCount="4" dataProvider="{datosGridresult}">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn dataField="nombre" headerText="Resultados Disponibles"></s:GridColumn >
			
			</s:ArrayList>
		</s:columns>
	</s:DataGrid>
	
	<s:DataGrid id="dg1" includeIn="grid"  x="330" y="82"  width="301" height="215"  
				  dataProvider="{arr_integracion_CRM}">
		<s:columns>
			<s:ArrayList>	
				<s:GridColumn dataField="nombre" headerText="Resultado"></s:GridColumn>
				<s:GridColumn width="71" dataField="estatus"  headerText="Estado"     >  
					  
					<s:itemRenderer>  
						<fx:Component>
							<s:GridItemRenderer>
								
								<fx:Script>
									<![CDATA[
										 										
										//import mx.controls.Alert;
										//import mx.core.FlexGlobals;
									
										protected function chkEstatus_changeHandler(event:Event):void{
										    //Actualiza el valor estatus del  checkbox
											outerDocument.cambioEstatus(int(chkEstatus.selected));
										}
									]]>
								</fx:Script>
								
							
								<mx:CheckBox id="chkEstatus"  horizontalCenter="5" verticalCenter="7" selected="{data.estatus}" change="chkEstatus_changeHandler(event)" >	
								</mx:CheckBox> 
							</s:GridItemRenderer>
						</fx:Component>
					</s:itemRenderer>
					  
				</s:GridColumn>

				</s:ArrayList>	
		</s:columns>

	</s:DataGrid>
	
	<s:CheckBox id="chktodos" includeIn="grid" x="570" y="57"  label="Todas" click="asignaValorCheck(event);"/>
	<s:Button id="agrega_resul" includeIn="grid" x="188" y="56" label="Agregar" click="asigna_resultado();"/>
	<s:TextInput id="resultxt"  includeIn="grid" x="88" y="21" width="166"  />
	<s:Button  id="elimina_resul" includeIn="grid" x="192" y="314" label="Eliminar" click='Alert.show("¿Estás seguro de eliminar el  resultado?", "Aviso",3,this,Elimina_Resultado);' />
	<s:Label includeIn="grid" x="21" y="31" text="Resultado:"/>
	<s:Label includeIn="grid" x="360" y="31" text="Campaña:"/>
	<s:ComboBox id="combo" includeIn="grid" x="429" y="21"
				change="cmb_campanas(event)"
				dataProvider="{datosCampanias}" labelField="nombre_camp"/>
	<s:VGroup includeIn="grid" x="263" y="121" width="59" height="138">
		<s:Button id="resul_integra" includeIn="grid" width="59" label="--&gt;" click="resultado_integra()" />
		<s:Button id="integra_resul" includeIn="grid" width="59" label="&lt;--" click="integra_resultado()"/>
		<s:Button id="resul_integra_todos" includeIn="grid" width="59" label="&gt;&gt;" click="resultado_integra_todos()"/>
		<s:Button id="integra_resul_todos" includeIn="grid" width="59" height="24" label="&lt;&lt;" click="integra_resultado_todos()"/>
	</s:VGroup>
	<s:Button id="salir" x="676" y="314" width="74" label="Cerrar" click="parent.removeChild(this)"/>
	<s:Button id="guardar"  x="676" y="153" width="74" label="Guardar"  click="ConfirmaGuardaResultados(event)"/>
	<s:Button id="editar" x="676" y="122" width="74" label="Editar" click="habilita_campos()"/>
	<s:Button id="cancelar" x="676" y="185" width="74" label="Cancelar"  click="CancelaIntegraCRM()"/>
	
</mx:Canvas>
